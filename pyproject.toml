[project]
name = "carpoolerbot"
version = "0.1.0"
description = "Interactive Telegram bot useful to do carpooling"
readme = "README.md"
authors = [
    { name = "Lorenzo Bevilacqua", email = "43483037+ardubev16@users.noreply.github.com" },
]
requires-python = ">=3.12"
dependencies = [
    "alembic==1.16.4",
    "apscheduler==3.11.0",
    "holidays==0.77",
    "pydantic==2.11.7",
    "pydantic-settings==2.10.1",
    "python-telegram-bot[job-queue]==22.3",
    "sqlalchemy==2.0.41",
]

[dependency-groups]
dev = ["mypy==1.17.0", "ruff==0.12.4"]

[project.scripts]
carpoolerbot = "carpoolerbot:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportUnknownMemberType = false
reportUnknownVariableType = false

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN204", # Missing type annotation for special method
    "D1",     # Missing docstring in public: module, class, method, function, package, magic method, nested class, init
    "D203",   # 1 blank line required before class docstring
    "D212",   # Multi-line docstring summary should start at the first line
    "DTZ",    # No Naive Datetime
    "FIX",    # Line contains FIXME, TODO, XXX, HACK, consider resolving the issue
    "S101",   # Checks for uses of the assert keyword.
    "S311",   # Standard pseudo-random generators are not suitable for cryptographic purposes
    "TD002",  # Checks that a TODO comment includes an author.
    "TRY400", # Use logging.exception() instead of logging.error() for logging exceptions
]

[tool.alembic]
script_location = "%(here)s/alembic"

# See https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file for all available tokens
file_template = "%%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s"

# additional paths to be prepended to sys.path. defaults to the current working directory.
prepend_sys_path = ["."]

[[tool.alembic.post_write_hooks]]
name = "ruff-format"
type = "exec"
executable = "%(here)s/.venv/bin/ruff"
options = "format REVISION_SCRIPT_FILENAME"

[[tool.alembic.post_write_hooks]]
name = "ruff-lint"
type = "exec"
executable = "%(here)s/.venv/bin/ruff"
options = "check --fix REVISION_SCRIPT_FILENAME"
